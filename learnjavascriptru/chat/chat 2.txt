сталкивался с таким

Sergey Zelenov [4:34 PM]
хм, я не встречал таокго

Sergei Novikov [5:19 PM]
@sergeyzelenov Выложил свое решение по get-post-server-task в свою папку в dropbox.
Вроде у меня работает. Хотя может мне просто так кажется.
Однако есть вопрос по процессу. Вы будете смотреть решение каждого участника и всем давать обратную связь по ним? Или же Выберете наиболее оптимальное из предложенных и обсудите его на занятии, чтобы всем было понятно как лучше делать? (edited)

Sergey Zelenov [5:20 PM]
я из всех работ выберу все ошибки, на занятии мы обязательно разберем их все. конечно же я покажу и свой вариант. далее уже будет зависеть от того, все ли понятно, есть ли вопросы


Sergei Novikov [5:20 PM]
ок

Vitaliy Kononov [8:51 PM]
hi, stream question

[8:51]
 ```var fs = require('fs');

var stream = new fs.ReadStream("index.html");

stream.on('readable', function(){
    var data = stream.read();
    console.log(data);
});

stream.on('end', function(){
   console.log('the end');
});```
(edited)

[8:52]
console

[8:52]
 ```streams v$ node stream.js
<Buffer 3c 21 64 6f 63 74 79 70 65 20 68 74 6d 6c 3e 0a 3c 68 74 6d 6c 3e 0a 3c 68 65 61 64 3e 0a 20 20 3c 6d 65 74 61 20 63 68 61 72 73 65 74 3d 22 55 54 46 ... >
null
the end```
(edited)

[8:52]
po4emu null?


Sergey Zelenov [8:55 PM]
это значит, что данные закончились

[8:55]
специальное значение для данной функции

Vitaliy Kononov [8:57 PM]
ponyal, a kogda delau ‘’'console.log(data.length);‘’' polu4au ‘’'TypeError: Cannot read property ‘length’ of null
‘’'


Sergey Zelenov [8:57 PM]
всем привет! подключайтесь к видео

Sergey Zelenov [8:58 PM]
ну это как раз для последнего раза, когда data - null
 3 replies Last reply 7 days ago View thread

Eugene Sholz [8:58 PM]
Блин, видимо я что-то перепутал, думал 11 занятие бует
1 reply 7 days ago View thread

Sergei Novikov [8:58 PM]
Вроде как проверку можно сделать типа такой:
```let data;
stream
.on('readable', function() {
              if ((data = stream.read()) != null) {
                console.log(data);
            }
}

  ```
(edited)
 3 replies Last reply 7 days ago View thread

Eugene Sholz [8:58 PM]
К сожалению это занятие пропущу, ибо сейчас отьехал

Сергей Лунев [9:00 PM]
Добрый вечер!

Andrey Miskov [9:05 PM]
Нормально ли синхронно проверять наличие файла?

Andrey Miskov [9:06 PM]
added and commented on this JavaScript/JSON snippet: Синхронная проверка наличия файла
function fileExists(filePath, res) {
  try {
    return fs.statSync(filePath).isFile();
  }
  catch (err) {
1 Comment Click to expand inline 11 lines
Типа так.

Alexandr Pozdnyakof [9:10 PM]
+

Andrey Miskov [9:11 PM]
А что значит однопоточность?
1 reply 7 days ago View thread

Andrey Miskov [9:12 PM]
Ага, ясно. Спасибо. Значит 1 процесс — один поток.

Sergey Zelenov [9:13 PM]
thread

[9:13]
stream

Andrey Miskov [9:13 PM]
Супер. Спасибо за объяснение.

Vladimir Deminenko
[9:13 PM]
thread --> цепочка

Sergei Novikov [9:15 PM]
readable (edited)

Alexey Drozdov [9:15 PM]
чтение, запись

Alexandr Pozdnyakof [9:15 PM]
read write transform duplex

Sergei Novikov [9:15 PM]
writable

Andrey Miskov [9:16 PM]
Объект

[9:18]
Ждет drain

Vladimir Deminenko
[9:18 PM]
пропустить цикл? (edited)

Alexey Drozdov [9:19 PM]
читает большой объем данных

Andrey Miskov [9:19 PM]
Он ждет пока данные кто-то заберет (edited)

Sergei Novikov [9:20 PM]
read()?

[9:20]
pipe?

Andrey Miskov [9:21 PM]
Дестрой

[9:21]
А, ну да :slightly_smiling_face:

Sergei Novikov [9:21 PM]
data?

[9:22]
А чем событие data отличается от readable?

Vladimir Deminenko
[9:25 PM]
мы можем здесь изменить данные?

Vitaliy Kononov [9:25 PM]
readable ne ispolzovat voobwe?

Nazar Tkach [9:26 PM]
ми можем посмотреть в документации какие есть собития?

Vitaliy Kononov [9:27 PM]
spasibo

Alexandr Pozdnyakof [9:31 PM]
А где хранится открытый файл до вызова close? Озу?

Konstantin Vytyagov [9:31 PM]
как обрабатываются ошибки в асинхронных вызовах?

Sergei Novikov [9:31 PM]
Для delete используется fs.unlink?

Andrey Miskov [9:32 PM]
Мою!

Vladimir Deminenko
[9:32 PM]
мою ))

Denys Lymarenko [9:32 PM]
+

Andrey Miskov [9:33 PM]
Это если оборвалось.

[9:33]
В скринкасте было.

[9:33]
Когда curl 1k

Svetlana Prudnikova [9:36 PM]
маловероятно

Alexey Drozdov [9:36 PM]
диск умер))

Alexandr Pozdnyakof [9:37 PM]
Вполне, жёсткий диск отключили

Vladimir Deminenko
[9:37 PM]
нет

Vitaliy Kononov [9:37 PM]
no

Vladimir Deminenko
[9:37 PM]
да-да

Andrey Miskov [9:37 PM]
Соединение оборвалось.

[9:40]
Ясно.

Egor Fomichev [9:41 PM]
файл останется открытым

Alexey Drozdov [9:41 PM]
файл останется открытм

Andrey Miskov [9:41 PM]
будет висеть чанк данных в памяти.

Anton Podgornyj [9:41 PM]
Останется открытый поток

Vladimir Deminenko
[9:41 PM]
буфер останется ждать будет

Egor Fomichev [9:41 PM]
утечка

Sergei Novikov [9:41 PM]
+ Все замыкание

Egor Fomichev [9:42 PM]
то есть утечки памяти не будет?

Alexey Drozdov [9:42 PM]
а если таких 1000 оборванных соединений будет?

Vladimir Deminenko
[9:43 PM]
т.е. то же самое, что соединение работает? (edited)

[9:43]
т.е. для сервера никакой разницы

Sergei Novikov [9:44 PM]
Документация советует открывать без fs.stat

Vladimir Deminenko
[9:44 PM]
..., statS

Andrey Miskov [9:44 PM]
У мен там функция `fileExists`

Sergei Novikov [9:44 PM]
Но я сам использовал stat

Vladimir Deminenko
[9:44 PM]
asyn (edited)

[9:45]
?

Denys Lymarenko [9:45 PM]
к блокировке?

Andrey Miskov [9:46 PM]
Ужос...

Sergey Arefyev [9:47 PM]
а зачем тогда передавать путь?

Andrey Miskov [9:47 PM]
У меня наличие файла проверяется в POST через `fs.statSync(filePath).isFile()`.

Egor Fomichev [9:48 PM]
чем ReadStream отличается от CreateReadStream ?

Andrey Miskov [9:49 PM]
Там функция ниже, `fileExists`

Sergei Novikov [9:49 PM]
А если нам например размер файла нужно узнать заранее, то что лучше вместо stat использовать?

Andrey Miskov [9:50 PM]
`statSync` же синхронная.

Konstantin Vytyagov [9:50 PM]
если использовать fs.stat не рекомендуется, как правильно посчитать `Content-Length`?

Alexandr Pozdnyakof [9:50 PM]
Правильно ли я понял что единственно правильный путь проверки файла на существование это вызов потока внутри open?

Andrey Miskov [9:50 PM]
Ясно.

Sergei Novikov [9:51 PM]
а через on data?

Andrey Miskov [9:51 PM]
Надо отдать файл — ставим nGinx :slightly_smiling_face:

Vladimir Deminenko
[9:52 PM]
порядок важен .on('error') .pipe()?

Alexandr Pozdnyakof [9:52 PM]
Понял спасибо

Andrey Miskov [9:53 PM]
На самом деле задача фунции `fileExists` в том, чтобы сказать при попытке отправить файл постом, что он уже есть.

Konstantin Vytyagov [9:53 PM]
у меня не получалось вручную отправлять данные потока при использовании `stream.pipe(res, {end: false})` (edited)

Sergei Novikov [9:55 PM]
Да

[9:55]
Будет переписан

Andrey Miskov [9:56 PM]
Круть!

Vladimir Deminenko
[9:57 PM]
409

Sergei Novikov [9:59 PM]
Размер,

[9:59]
if (+req.headers['content-length'] > 1048576)?

[10:01]
А можно повторить начало второго варианта, а то у меня звук пропал на минуту?

[10:01]
Извиняюсь

[10:02]
А ведь файл тогда будет записан до maxSize?

Anton Podgornyj [10:02 PM]
После file.destroy продолжится читаться поток?

Konstantin Vytyagov [10:03 PM]
в событие `data` передаётся по ссылке buffer? его можно подменить перед отправкой в поток?

Egor Fomichev [10:03 PM]
А в случае отправки клиенту потока данных из текстового файла, как отличить ситуацию, когда эти данные надо вывести в браузер, от ситуации, когда этот текстовый файл надо скачать? Я так понимаю, и в том, и в другом случае поток просто пишется в res

Anton Podgornyj [10:03 PM]
Я делал console.log(size) и size продолжал выводиться

Sergei Novikov [10:04 PM]
А можно попробовать этот код и передать большой файл. Просто вроде как data будет идти отreq даже после end? У меня так было?

Vladimir Deminenko
[10:05 PM]
go, go, go!

Anton Podgornyj [10:05 PM]
Да

Sergei Novikov [10:05 PM]
Да вроде так

Anton Podgornyj [10:05 PM]
У меня тоже

Sergei Novikov [10:05 PM]
req качает

Anton Podgornyj [10:05 PM]
Я поэтому костыли там и пихал потом

Sergei Novikov [10:06 PM]
Да

Vladimir Deminenko
[10:08 PM]
russian?

Andrey Miskov [10:08 PM]
Кодировка не та?

Sergei Novikov [10:08 PM]
Это двойной символ ?

[10:08]
Ну типо два бита на символ?

Anton Podgornyj [10:12 PM]
Вроде нет

Vladimir Deminenko
[10:13 PM]
порции

Sergei Novikov [10:13 PM]
drain?

Oleg Didkovskyi [10:13 PM]
тормозит поток если данные не прочитаны

Egor Fomichev [10:15 PM]
Можно еще раз, что такое highWaterMark ?

Sergei Novikov [10:16 PM]
В скринкасте было без pipe (пример) (edited)

[10:17]
Остановит качать в fileOut?

Alexandr Pozdnyakof [10:17 PM]
Пауза

Vladimir Deminenko
[10:17 PM]
close streams

Andrey Miskov [10:17 PM]
Перестанет писать через 20 сек.

[10:18]
А можно этот же пример с `pause`?

[10:19]
Спасибо.

Sergei Novikov [10:30 PM]
Я сделал просто через headers

[10:30]
B yt gfhbkcz

[10:30]
if (+req.headers['content-length'] > 1048576)

Anton Podgornyj [10:30 PM]
Ну у меня проблема была в том что файл все равно до конца дочитывался

Sergei Novikov [10:30 PM]
Нет

[10:30]
После header не шла

[10:31]
Все стало ок

Anton Podgornyj [10:32 PM]
Странно...

[10:32]
Ок

[10:32]
Да, вроде все ок

Alexandr Pozdnyakof [10:33 PM]
Более менее, переварить ещё надо детали)

Vladimir Deminenko
[10:33 PM]
нужно время ещё самостоятельно посидеть

Alexey Drozdov [10:33 PM]
надо больше практики

Egor Fomichev [10:33 PM]
Нужна практика, потрениться во всем этом)

Sergei Novikov [10:33 PM]
А есть может учебник (англоязычный хотя бы). Современный по потокам?

Vladimir Deminenko
[10:35 PM]
super! ))

Alexandr Pozdnyakof [10:35 PM]
https://github.com/substack/stream-handbook может будет полезно
GitHub
substack/stream-handbook
stream-handbook - how to write node programs with streams


[10:35]
Ок, сори)

Vladimir Deminenko
[10:47 PM]
логичнее ошибки допускать в тестируемых функциях (edited)

Vladimir Deminenko
[10:53 PM]
after(done...)  ??

[10:54]
ok

Sergei Novikov [10:55 PM]
done  - это просто пустой коллбэк?

Konstantin Vytyagov [10:55 PM]
а если сервер не ответит?

Egor Fomichev [10:57 PM]
Можно еще раз, откуда done взялся ?

Anton Boksha [10:58 PM]
Тестирование с фикстурами?
Тестирование зависимых модулей?
Области видимости?

Sergei Novikov [10:59 PM]
А есть может учебник (англоязычный хотя бы). Современный по тестам и (конкретно моке)?

[11:01]
Тем кто впервые встретился куда лучше сначала смотреть? Просто инфы много

Anton Boksha [11:01 PM]
Понял, спасибо :slightly_smiling_face:

Sergei Novikov [11:01 PM]
Это само собой

Andrey Miskov [11:02 PM]
Можно начать отсюда :slightly_smiling_face: http://learn.javascript.ru/testing

Sergei Novikov [11:02 PM]
Это я видел

[11:02]
спасибо

[11:03]
Ок

Egor Fomichev [11:04 PM]
А про фреймворк Jasmine что-то слышали? Аналог моки, недавно просто знакомые обсуждали его
 2 replies Last reply 6 days ago View thread

Vladimir Deminenko
[11:04 PM]
довести чат до ума?

Anton Podgornyj [11:06 PM]
No

Sergei Novikov [11:07 PM]
То есть надо протестить GET, POST и DELETE?

Vladimir Deminenko
[11:07 PM]
ещё раз по первому пункту

new messages
[11:08]
+

Anton Podgornyj [11:08 PM]
Спасибо)

Egor Fomichev [11:08 PM]
Спасибо, с наступающим!

Сергей Лунев [11:08 PM]
До встречи.

Alexandr Pozdnyakof [11:08 PM]
Спасибо, хороших праздников

Sergei Novikov [11:08 PM]
спасибо

Vladimir Deminenko
[11:09 PM]
спасибо!


----- May 6th -----
Eugene Sholz [2:19 PM]
во вторник же занятие не будет?

Egor Fomichev [2:20 PM]
@sergeyzelenov Сергей, попробовал запустить ваш пример, вылезает ошибка `Error: Cannot find module 'config'` . Это из-за чего может быть?

Denys Lymarenko [2:20 PM]
да, в птн будет

Egor Fomichev [2:20 PM]
пример с файл-сервером

Egor Fomichev [2:22 PM]
uploaded this image: Pasted image at 2017-05-06, 14:22
Add Comment

Egor Fomichev [2:28 PM]
Разобрался, config - это отдельный модуль, надо ставить отдельно: npm install config

Stanislav Khovanov [6:35 PM]
@sergeyzelenov Сергей, я не смог присутствовать на втором занятии, а запись этого занятия когда планируете выложить?

Eugene Sholz [6:40 PM]
Тот же вопрос

Denys Lymarenko [8:55 PM]
все же материалы в профиле будут и на дропбоксе


----- May 7th -----
Sergey Zelenov [10:26 AM]
Всем привет!
Прошу прощения, возникли технические проблемы, видео точно будет сегодня, но, к сожалению, ближе к вечеру.


Denys Lymarenko [9:35 PM]
@sergeyzelenov а вы свое решение первого занятия выложите? чтоб и тесты уже писать приавильно. и посмотреть точно как все правильно делается

Sergey Zelenov [9:44 PM]
Должны быть у меня в папке 02/get-post-server

Denys Lymarenko [9:45 PM]
не заметил сразу, спасибо)

Denys Lymarenko [9:59 PM]
а как правильно тестировать,
например случай, загружаем файл... тестим.
или изменяем инфу или данные какие то.
или что то такое подобное, бывает думаю часто.
что в этом случае делают?
его же потом надо после теста удалить или как то так.
и как на практике в проэктах это реализуют, может тестовые сервера? (edited)

Vladimir Deminenko
[10:53 PM]
@limarenkodenis,  я представляю себе процесс тестирования следующим образом:
- выделить папки, где лежат тестовые файлы и, та куда будем их писать (files) ;
- перед каждым тестом и после каждого, удалять содержимое из второй папки;
- разработать наборы тестов для каждого протокола, по одному набору на протокол, например;
- для тестов GET готовим набор файлов для чтения;
- тоже самое для POST, если тестируем случай записи файлов, которые уже существуют;
- разработать отдельные тесты, каждый из которого тестирует ТОЛЬКО одну функциональность, например, запись большого файла;
- не допускать, чтобы результат одного теста оказывал влияние на другой - например, не использовать в тесте на чтение, результат, полученный при тесте на запись в другом тесте;
- отсюда следует, что перед каждым тестом, нужно подготовить среду для выполнения отдельного НЕЗАВИСИМОГО теста, т.е. в одном случае, чтобы папка files была пуста, в другом - чтобы там находился набор неких файлов и т.д.
Примерно, так я вижу ))

Egor Fomichev [11:25 PM]
А можно как-то замокать загрузку/скачку файла?

Denys Lymarenko [11:50 PM]
а почему should, request и expect в dependencies, я думал для тестов в devDependencies библиотеки? (edited)


----- May 8th -----
Sergey Zelenov [8:26 PM]
@vladimir_deminenko да, это обычно ровно так и делается


[8:26]
у моки для этого есть специальные методы - beforeEach и afterEach, в которых можно запускать любой “подготовительный” код

[8:27]
т.е. удаление файла или копирование, или что угодно

[8:27]
@eafomi4ev вообще можно, но я вам предлагаю делать настоящие запросы и ответы. так сейчас проще будет

[8:27]
а вообще, можно сделать несколькими способами, я покажу обязательно



----- May 9th -----
Denys Lymarenko [12:22 AM]
а как кто тестил POST метод, загрузка файла?, в документации к request Пишут что через form-data, но что т не получается, кто как делал? подскажите плз

Denys Lymarenko [12:25 AM]
added this JavaScript/JSON snippet
   const form = {
    my_file: fs.createReadStream('test/files/index.js')
   };
   // const form = fs.createReadStream('test/files/index.js');
   // request.post(`${URL}/`, form, (err, response, body) => {
Add Comment Click to expand inline 10 lines

Sergey Zelenov [3:29 PM]
@limarenkodenis есть несколько способов:
 через потоки:
либо передать поток чтения файла в аргументе body,
либо воспользоваться тем, что request возвращает поток, в который можно писать
ну или можно передать прям считанный файл  в параметре body


----- May 10th -----
Sergey Zelenov [3:58 PM]
всем привет!
сейчас должна придти рассылка

[3:58]
с сожалением сообщаю, что заболел ангиной, и мне очень сложно разговаривать :disappointed:

[3:59]
наше пятничное занятие придется перенести

Alexandr Pozdnyakof [4:31 PM]
сочувстую, сам только поправился

Anton Podgornyj [4:35 PM]
выздоравливай!


Sergey Zelenov [6:26 PM]
спасибо! я стараюсь :slightly_smiling_face:

Illarion Glebov [7:11 PM]
https://medium.com/devschacht/event-loop-timers-and-nexttick-18579cd122e0
Medium
